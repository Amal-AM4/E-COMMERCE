<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Gateway</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Include Stripe.js -->
    <script src="https://js.stripe.com/v3/"></script>

    <style>
        .img-fluid {
            width: 340px;
            height: auto;
        }
        .prt-title {
            font-size: 18px;
        }
        .stripe-logo {
            width: 100px;
            height: auto;
            margin-bottom: 10px;
        }

        .product-details{
            box-shadow: 0px 10px 15px rgba(0, 0, 0, 0.09);
            display: flex !important;
            flex-direction: column !important;
            align-items: center;
            justify-content: center;
            text-align: center;
            border-radius: 12px;
            width: 460px;
        }

        .product-details .price-box {
            background-color: #007bff;
            color: #f8f9fa;
            padding: 10px 14px;
            cursor: pointer;
            border-radius: 4px;
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.3);
            margin-bottom: 40px;
        }
        .cancell-btn {
            display: block;
            background-color: #dc3545;
            color: #f8f9fa;
            /* padding: 10px; */
            width: 40px;
            height: 40px;
            text-align: center;
            font-size: 22px;
            border-radius: 50%;
            font-weight: bold;
            cursor: pointer;
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.3);
            position: absolute;
            top: 0;
            right: 120px;
        }
        .cancell-btn:hover {
            transition: all 0.2s ease;
            background-color: #b32c39;
        }



    </style>
</head>
<body>
    <div class="container">
        <h1 class="mt-4">Payment Gateway</h1>
        <div class="row mt-4">
            
            <div class="col-md-6 product-box">
                <div class="product-details">
                    <img src="<%= productData.thumb_img.replace('public', '') %>" class="img-fluid" alt="Product Image">
                    <h2 class="prt-title"><%= productData.name %></h2>
                    <p style="font-size: 18px;">Quantity: <%= qty %></p>
                    <p style="font-size: 18px; font-weight: bold;" class="price-box">Price: &#8377;<%= productData.dicount_price * qty %>.00</p>
                </div>
                <span class="cancell-btn" id="cancell-btn">x</span>
            </div>

            <div class="col-md-6">
                <img src="/images/Stripe-logo.png" class="stripe-logo" alt="">
                <form id="paymentForm">
                    
                    <input type="text" id="cardholderName" name="cardholderName" class="form-control mb-2" placeholder="Cardholder Name" required>

                    <div id="card-element" class="form-control mb-4"></div>


                    <!-- Include product ID and quantity in hidden fields -->
                    <input type="hidden" id="amount" name="amount" value="<%= productData.dicount_price * qty %>">
                    <input type="hidden" id="userId" name="userId" value="<%= userTbl.id %>">
                    <input type="hidden" id="productId" name="productId" value="<%= productData.id %>">
                    <input type="hidden" id="quantity" name="quantity" value="<%= qty %>">
                    <button type="submit" class="btn btn-primary">Pay Now</button>
                </form>
                <div id="paymentMessage" class="mt-3"></div>
            </div>
        </div>
    </div>


    <script>
        const cancellBtn = document.getElementById('cancell-btn');

        cancellBtn.addEventListener('click', () => {
            window.close();
        });
    </script>



<script>
    document.addEventListener('DOMContentLoaded', async () => {
        const stripe = Stripe('<%= STRIPE_PUBLIC_KEY %>');
        const elements = stripe.elements();
        const cardElement = elements.create('card');
        cardElement.mount('#card-element');

        const paymentForm = document.getElementById('paymentForm');
        const paymentMessage = document.getElementById('paymentMessage');

        paymentForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            // Collect additional data from the form
            const cardholderName = document.getElementById('cardholderName').value;
            const amount = document.getElementById('amount').value;
            const userId = document.getElementById('userId').value;
            const productId = document.getElementById('productId').value;
            const quantity = document.getElementById('quantity').value;

            // Create a Payment Method using Stripe Elements
            const { paymentMethod, error } = await stripe.createPaymentMethod({
                type: 'card',
                card: cardElement,
                billing_details: {
                    name: cardholderName,
                },
            });

            if (error) {
                console.error(error.message);
                paymentMessage.innerText = error.message;
            } else {
                // Payment Method ID is obtained from the created Payment Method
                const paymentMethodId = paymentMethod.id;
                console.log('Payment Method ID:', paymentMethodId);

                // Send Payment Method ID and other data to your server for processing
                fetch('/process-payment', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        paymentMethodId: paymentMethodId,
                        cardholderName: cardholderName,
                        amount: amount,
                        userId: userId,
                        productId: productId,
                        quantity: quantity,
                    }),
                    
                })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    paymentMessage.innerText = data.message;
                    
                    // Redirect to the homepage after 3 seconds 
                    setTimeout(() => {
                        window.location.href = `/update-quanty/<%= productData.id %>/<%= qty %>`;
                    }, 2000);
                })
                .catch(error => {
                    console.error('Fetch error:', error);
                    // Handle non-JSON responses or other fetch errors here
                });
            }
            
        });
    });
</script>

</body>
</html>
